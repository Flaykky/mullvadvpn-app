---
name: Android - Build and test
on:
  pull_request:
    paths:
      - '**'
      - '!.github/workflows/**'
      - '.github/workflows/android-app.yml'
      - '!.github/CODEOWNERS'
      - '!audits/**'
      - '!ci/**'
      - '!dist-assets/**'
      - '!docs/**'
      - '!graphics/**'
      - '!gui/**'
      - '!ios/**'
      - '!test/**'
      - '!scripts/**'
      - '!windows/**'
      - '!**/**.md'
      - '!**/osv-scanner.toml'
  schedule:
    # At 00:00 UTC every day.
    # Notifications for scheduled workflows are sent to the user who last modified the cron
    # syntax in the workflow file. If you update this you must have notifications for
    # Github Actions enabled, so these don't go unnoticed.
    # https://docs.github.com/en/actions/monitoring-and-troubleshooting-workflows/notifications-for-workflow-runs
    - cron: '0 0 * * *'
  workflow_dispatch:
    inputs:
      override_container_image:
        description: Override container image
        type: string
        required: false
      run_firebase_tests:
        description: Run firebase tests
        type: boolean
        required: false
      mockapi_test_repeat:
        description: Mockapi test repeat(self hosted)
        default: '1'
        required: true
        type: string
      e2e_test_repeat:
        description: e2e test repeat(self hosted)
        default: '0'
        required: true
        type: string
  # Build if main is updated to ensure up-to-date caches are available
  push:
    branches: [main]

permissions: {}

jobs:
  build-app:
    name: Build app
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Checkout wireguard-go-rs recursively
        run: |
          git config --global --add safe.directory '*'
          git submodule update --init --recursive --depth=1 wireguard-go-rs

      - name: Build native
        run: ./building/container-run.sh android ./build-apk.sh --dev-build --skip-apk

      - name: Build debug app
        run: ./building/container-run.sh android android/gradlew -p android assembleOssProdDebug

      - name: Upload apks
        # Using v3 due to v4 being very slow for this artifact.
        uses: actions/upload-artifact@v3
        with:
          name: apks
          path: android/app/build/outputs/apk
          if-no-files-found: error
          retention-days: 7
