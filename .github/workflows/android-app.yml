---
name: Android - Build and test
on:
  pull_request:
    paths:
      - '**'
      - '!.github/workflows/**'
      - '.github/workflows/android-app.yml'
      - '!.github/CODEOWNERS'
      - '!audits/**'
      - '!ci/**'
      - '!dist-assets/**'
      - '!docs/**'
      - '!graphics/**'
      - '!gui/**'
      - '!ios/**'
      - '!test/**'
      - '!scripts/**'
      - '!windows/**'
      - '!**/**.md'
      - '!**/osv-scanner.toml'
  schedule:
    # At 00:00 UTC every day.
    # Notifications for scheduled workflows are sent to the user who last modified the cron
    # syntax in the workflow file. If you update this you must have notifications for
    # Github Actions enabled, so these don't go unnoticed.
    # https://docs.github.com/en/actions/monitoring-and-troubleshooting-workflows/notifications-for-workflow-runs
    - cron: '0 0 * * *'
  workflow_dispatch:
    inputs:
      override_container_image:
        description: Override container image
        type: string
        required: false
      run_firebase_tests:
        description: Run firebase tests
        type: boolean
        required: false
      mockapi_test_repeat:
        description: Mockapi test repeat(self hosted)
        default: '1'
        required: true
        type: string
      e2e_test_repeat:
        description: e2e test repeat(self hosted)
        default: '0'
        required: true
        type: string
  # Build if main is updated to ensure up-to-date caches are available
  push:
    branches: [main]

permissions: {}

jobs:
  prepare:
    name: Prepare
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use custom container image if specified
        if: ${{ github.event.inputs.override_container_image != '' }}
        run: echo "inner_container_image=${{ github.event.inputs.override_container_image }}"
          >> $GITHUB_ENV

      - name: Use default container image and resolve digest
        if: ${{ github.event.inputs.override_container_image == '' }}
        run: |
          echo "inner_container_image=$(cat ./building/android-container-image.txt)" >> $GITHUB_ENV
    outputs:
      container_image: ${{ env.inner_container_image }}

  build-app:
    name: Build app
    needs: [prepare]
    runs-on: ubuntu-latest
    container:
      image: ${{ needs.prepare.outputs.container_image }}
    steps:
      # Fix for HOME path overridden by GH runners when building in containers, see:
      # https://github.com/actions/runner/issues/863
      - name: Fix HOME path
        run: echo "HOME=/root" >> $GITHUB_ENV

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Checkout wireguard-go-rs recursively
        run: |
          git config --global --add safe.directory '*'
          git submodule update --init --recursive --depth=1 wireguard-go-rs

      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: "v0-rust-android"
          cache-all-crates: "true"

      - name: Build native
        run: ./build-apk.sh --dev-build --skip-apk

      - name: Build debug app
        uses: burrunan/gradle-cache-action@v1
        with:
          job-id: jdk17-caching-test
          arguments: assembleOssProdDebug
          gradle-version: wrapper
          build-root-directory: android
          execution-only-caches: false
          # Disable if logs are hard to follow.
          concurrent: true
          read-only: ${{ github.ref != 'refs/heads/main' }}

      - name: Upload apks
        # Using v3 due to v4 being very slow for this artifact.
        uses: actions/upload-artifact@v3
        with:
          name: apks
          path: android/app/build/outputs/apk
          if-no-files-found: error
          retention-days: 7
